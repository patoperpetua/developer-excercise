/*
 * Kinesis Code Exercise API
 * This is an API to interact with Kineses Code Exercise API # Introduction This API allow to create, modify and delete products, discounts, and orders. # User Authentication This API does not contain any kind of user validation but It request to have a valid authentication user to interact with it. For more information about user Authentication, please refer to [Kinesis Authentication API](https://auth.kinesis.singleton.com.au/). 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: patoperpetua@singletonsd.com.au
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package au.com.singletonsd.kinesis.api.serial.api;

import au.com.singletonsd.kinesis.api.serial.api.ApiException;
import au.com.singletonsd.kinesis.api.serial.model.CustomError;
import au.com.singletonsd.kinesis.api.serial.model.Deleted;
import au.com.singletonsd.kinesis.api.serial.model.Discounts;
import au.com.singletonsd.kinesis.api.serial.model.ResponseGetDiscount;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DiscountsApi
 */
@Ignore
public class DiscountsApiTest {

    private final DiscountsApi api = new DiscountsApi();

    
    /**
     * Add one discount.
     *
     * Add one discount.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addDiscountTest() throws ApiException {
        Discounts discounts = null;
        Discounts response = api.addDiscount(discounts);

        // TODO: test validations
    }
    
    /**
     * Delete one discount.
     *
     * Delete one discount.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDiscountTest() throws ApiException {
        Long id = null;
        Long response = api.deleteDiscount(id);

        // TODO: test validations
    }
    
    /**
     * Edit one discount.
     *
     * Edit one discount.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void editDiscountTest() throws ApiException {
        Long id = null;
        Discounts discounts = null;
        Discounts response = api.editDiscount(id, discounts);

        // TODO: test validations
    }
    
    /**
     * Get one discount.
     *
     * Get one discount.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDiscountByIdTest() throws ApiException {
        Long id = null;
        Deleted deleted = null;
        Discounts response = api.getDiscountById(id, deleted);

        // TODO: test validations
    }
    
    /**
     * Get all discounts.
     *
     * Get all discounts.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDiscountsTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        String sort = null;
        Deleted deleted = null;
        Boolean metadata = null;
        ResponseGetDiscount response = api.getDiscounts(page, size, sort, deleted, metadata);

        // TODO: test validations
    }
    
}
